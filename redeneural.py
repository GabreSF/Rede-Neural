# -*- coding: utf-8 -*-
"""Redeneural.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/14oOpcUxnae2UJrb44YJCIgyoVc_HhKm1
"""

pip install plotly --upgrade

pip install -U scikit-learn

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
import plotly.express as px

from sklearn.neural_network import MLPClassifier

import pickle
with open('Imoveiss.pkl', 'rb') as f:  
  x_imove_treinamento, y_imove_treinamento, x_imove_teste, y_imove_teste = pickle.load(f)

x_imove_treinamento.shape, y_imove_treinamento.shape

x_imove_teste.shape, y_imove_teste.shape

"""**Realizando as gerações do treinamento da Rede Neural**"""

rede_neural_imove = MLPClassifier(max_iter=332, verbose=True, tol=0.0000100,
                                   solver = 'adam', activation = 'relu',
                                   hidden_layer_sizes = (20,20))
rede_neural_imove.fit(x_imove_treinamento, y_imove_treinamento)

previsoes = rede_neural_imove.predict(x_imove_teste)
previsoes

y_imove_teste

"""**Resultado do accuracy da nossa rede**"""

from sklearn.metrics import accuracy_score, classification_report
accuracy_score(y_imove_teste, previsoes)

from yellowbrick.classifier import ConfusionMatrix
cm = ConfusionMatrix(rede_neural_imove)
cm.fit(x_imove_treinamento, y_imove_treinamento)
cm.score(x_imove_teste, y_imove_teste)

print(classification_report(y_imove_teste, previsoes))

"""**Obtivemos um acerto de previssões de 100%**"""